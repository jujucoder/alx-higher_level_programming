
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided([[1, 'f', 3], [4, 5, 6]], 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1, 'f', 3], [4, 5, 6, 7]], 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 'f'))
Traceback (most recent call last):
TypeError: div must be a number

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[3, 4]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[3, 4], [6, 7]], -2)
[[-1.5, -2.0], [-3.0, -3.5]]

>>> matrix_divided([[2, 3], [4, 5]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> print(matrix_divided([[1, 2, 3, 4], [4, 5, 6]], 3))
Traceback (most recent call last):
TypeError: matrix must have each row with the same size